
// Just Use Dynamic Normal Problem 

/*
Nayeem Mollick Joy , Electrical & Electronic Engineering , University of Rajshahi.
Passionate Contest Programmer , Coder , Android Developer */


#include<bits/stdc++.h>

using namespace std;

int main()
{

   int N,M,test=1;
   char s1[10005];
   char s2[10005];
   while(gets(s1))
   {
       if(s1[0]=='#')
       {
           break;
       }
       gets(s2);
       N=strlen(s1);
       M=strlen(s2);
       int dp[N+1][M+1];
       for(int i=0;i<=N;i++)
       {
           for(int j=0;j<=M;j++)
           {
               if(i==0||j==0)
               {
                   dp[i][j]=0;
                   continue;
               }
               else if(s1[i-1]==s2[j-1])
               {
                   dp[i][j]=dp[i-1][j-1]+1;
               }
               else
               {
                   dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
               }
           }
       }
       printf("Case #%d: you can visit at most %d cities.\n",test,dp[N][M]);
       test++;
   }
    return 0;
}
