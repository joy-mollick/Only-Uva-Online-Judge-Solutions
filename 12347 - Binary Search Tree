// Just At First Construct Binary Search Tree and Then Post Order Traverse . U should obviously bear a good knowledge about tree and recursion,Otherwise U can't solve this 

/*
Nayeem Mollick Joy , Electrical & Electronic Engineering , University of Rajshahi.
Passionate Contest Programmer , Coder , Android Developer */


#include<bits/stdc++.h>

using namespace std;

struct node
{
    int data;
    struct node *left;
    struct node*right;
};

struct node* new_node(int data)
{
    struct node*temp=new node();
    temp->data=data;
    temp->left=temp->right=NULL;
    return temp;
}

struct node* constructTree(int pre[],int *index,int value,int min,int max,int length)
{
     if(*index>=length)
     {
         return NULL;
     }
     struct node* root=NULL;
     if(value>min&&value<max)
     {
         root=new_node(value);
         *index= (*index)+1;
         if(*index<length){
         root->left=constructTree(pre,index,pre[*index],min,value,length);
         root->right=constructTree(pre,index,pre[*index],value,max,length);

         }
     }
     return root;
}

void post_order(struct node* root)
{
    if(root==NULL)
    {
        return ;
    }
    post_order(root->left);
    post_order(root->right);
    printf("%d\n",root->data);
}

int pre[10001];
int main()
{
    int i=0;
    int a;
    while(scanf("%d",&a)==1)
    {
        pre[i]=a;
        i++;
    }
    int size=i;
    int index=0;
    struct node* root=constructTree(pre,&index,pre[0],INT_MIN,INT_MAX,size);
    post_order(root);
    return 0;
}
